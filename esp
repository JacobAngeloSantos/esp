-- LocalScript in StarterPlayerScripts

local Players      = game:GetService("Players")
local RunService   = game:GetService("RunService")
local LocalPlayer  = Players.LocalPlayer
local Camera       = workspace.CurrentCamera

-- State
local selectedPlayer    = nil
local highlightsOn      = false
local looking           = false
local lookConnection
local oldCameraMode     = LocalPlayer.CameraMode

-- GUI Setup
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "PlayerTools"
screenGui.ResetOnSpawn = false
screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

-- Menu Toggle Button
local menuButton = Instance.new("TextButton", screenGui)
menuButton.Size = UDim2.new(0,100,0,30)
menuButton.Position = UDim2.new(0,20,0,20)
menuButton.Text = "Toggle Menu"
menuButton.BackgroundColor3 = Color3.fromRGB(150,0,0)
menuButton.TextColor3 = Color3.new(1,1,1)

-- Main Frame
local mainFrame = Instance.new("Frame", screenGui)
mainFrame.Size = UDim2.new(0,250,0,330)
mainFrame.Position = UDim2.new(0,20,0,60)
mainFrame.BackgroundColor3 = Color3.fromRGB(40,40,40)
mainFrame.Active = true
mainFrame.Draggable = true

-- Close Button
local closeBtn = Instance.new("TextButton", mainFrame)
closeBtn.Size = UDim2.new(0,25,0,25)
closeBtn.Position = UDim2.new(1,-30,0,5)
closeBtn.Text = "X"
closeBtn.BackgroundColor3 = Color3.fromRGB(100,0,0)
closeBtn.TextColor3 = Color3.new(1,1,1)

-- Highlight Toggle
local highlightBtn = Instance.new("TextButton", mainFrame)
highlightBtn.Size = UDim2.new(1,-20,0,30)
highlightBtn.Position = UDim2.new(0,10,0,40)
highlightBtn.Text = "Toggle Highlights"
highlightBtn.BackgroundColor3 = Color3.fromRGB(255,0,0)
highlightBtn.TextColor3 = Color3.new(1,1,1)

-- Look Toggle
local lookBtn = Instance.new("TextButton", mainFrame)
lookBtn.Size = UDim2.new(1,-20,0,30)
lookBtn.Position = UDim2.new(0,10,0,80)
lookBtn.Text = "Look at Player"
lookBtn.BackgroundColor3 = Color3.fromRGB(0,100,200)
lookBtn.TextColor3 = Color3.new(1,1,1)

-- Player Dropdown Button
local dropdownBtn = Instance.new("TextButton", mainFrame)
dropdownBtn.Size = UDim2.new(1,-20,0,30)
dropdownBtn.Position = UDim2.new(0,10,0,120)
dropdownBtn.Text = "Select Player ▼"
dropdownBtn.BackgroundColor3 = Color3.fromRGB(100,0,0)
dropdownBtn.TextColor3 = Color3.new(1,1,1)

-- ScrollFrame for list
local scrollFrame = Instance.new("ScrollingFrame", mainFrame)
scrollFrame.Size = UDim2.new(1,-20,0,120)
scrollFrame.Position = UDim2.new(0,10,0,160)
scrollFrame.BackgroundColor3 = Color3.fromRGB(30,30,30)
scrollFrame.CanvasSize = UDim2.new(0,0,0,0)
scrollFrame.ScrollBarThickness = 6
scrollFrame.Visible = false

local uiList = Instance.new("UIListLayout", scrollFrame)
uiList.Padding = UDim.new(0,2)
uiList.SortOrder = Enum.SortOrder.LayoutOrder

-- Refresh Button
local refreshBtn = Instance.new("TextButton", mainFrame)
refreshBtn.Size = UDim2.new(1,-20,0,30)
refreshBtn.Position = UDim2.new(0,10,0,290)
refreshBtn.Text = "Refresh Player List"
refreshBtn.BackgroundColor3 = Color3.fromRGB(80,0,0)
refreshBtn.TextColor3 = Color3.new(1,1,1)

-- Helpers: highlight and nametag
local highlights = {}
local function createEffects(player)
	local char = player.Character
	if not char or highlights[player] then return end
	-- Highlight
	local hl = Instance.new("Highlight")
	hl.FillColor = Color3.fromRGB(255,0,0)
	hl.OutlineColor = Color3.fromRGB(255,0,0)
	hl.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
	hl.Adornee = char
	hl.Parent = char
	highlights[player] = hl
	-- Nametag
	local head = char:FindFirstChild("Head")
	if head then
		local bg = Instance.new("BillboardGui", char)
		bg.Size = UDim2.new(0,100,0,30)
		bg.StudsOffset = Vector3.new(0,3,0)
		bg.Adornee = head
		bg.AlwaysOnTop = true
		local label = Instance.new("TextLabel", bg)
		label.Size = UDim2.new(1,0,1,0)
		label.BackgroundTransparency = 1
		label.TextColor3 = Color3.fromRGB(255,0,0)
		label.Text = player.Name
	end
end
local function removeEffects(player)
	if highlights[player] then
		highlights[player]:Destroy()
		highlights[player] = nil
	end
	if player.Character then
		for _, gui in pairs(player.Character:GetChildren()) do
			if gui:IsA("BillboardGui") then gui:Destroy() end
		end
	end
end

-- Update the dropdown list (show DisplayName)
local function refreshList()
	-- clear existing buttons
	for _, child in pairs(scrollFrame:GetChildren()) do
		if child:IsA("TextButton") then child:Destroy() end
	end
	-- recreate for each player (excluding you)
	for _, pl in ipairs(Players:GetPlayers()) do
		if pl ~= LocalPlayer then
			local btn = Instance.new("TextButton", scrollFrame)
			btn.Size = UDim2.new(1,-4,0,30)
			btn.Text = pl.DisplayName
			btn.BackgroundColor3 = Color3.fromRGB(150,0,0)
			btn.TextColor3 = Color3.new(1,1,1)
			btn.Font = Enum.Font.Gotham
			btn.TextScaled = true
			btn.MouseButton1Click:Connect(function()
				selectedPlayer = pl
				dropdownBtn.Text = "Target: "..pl.DisplayName.." ▼"
				scrollFrame.Visible = false
			end)
		end
	end
	-- adjust scrollable area
	scrollFrame.CanvasSize = UDim2.new(0,0,0,#scrollFrame:GetChildren()*32)
end

-- Connections --

-- Menu toggle
menuButton.MouseButton1Click:Connect(function()
	mainFrame.Visible = not mainFrame.Visible
end)

-- Close
closeBtn.MouseButton1Click:Connect(function()
	mainFrame.Visible = false
	menuButton.Visible = true
end)

-- Highlights toggle
highlightBtn.MouseButton1Click:Connect(function()
	highlightsOn = not highlightsOn
	for _, pl in ipairs(Players:GetPlayers()) do
		if pl ~= LocalPlayer then
			if highlightsOn then createEffects(pl) else removeEffects(pl) end
		end
	end
end)

-- Look at player toggle + first-person switch
lookBtn.MouseButton1Click:Connect(function()
	if not selectedPlayer then return end
	looking = not looking

	if looking then
		-- force first-person
		oldCameraMode = LocalPlayer.CameraMode
		LocalPlayer.CameraMode = Enum.CameraMode.LockFirstPerson

		lookBtn.Text = "Stop Looking"
		lookConnection = RunService.RenderStepped:Connect(function()
			local pl = selectedPlayer
			if pl and pl.Character and pl.Character:FindFirstChild("Head") then
				local headPos = pl.Character.Head.Position
				local camPos  = Camera.CFrame.Position
				local target  = CFrame.new(camPos, headPos)
				Camera.CFrame = Camera.CFrame:Lerp(target, 0.1)
			end
		end)
	else
		-- restore camera mode
		LocalPlayer.CameraMode = oldCameraMode or Enum.CameraMode.Classic

		lookBtn.Text = "Look at Player"
		if lookConnection then
			lookConnection:Disconnect()
			lookConnection = nil
		end
	end
end)

-- Dropdown toggle
dropdownBtn.MouseButton1Click:Connect(function()
	scrollFrame.Visible = not scrollFrame.Visible
end)

-- Refresh list button
refreshBtn.MouseButton1Click:Connect(refreshList)

-- Auto-refresh when players join/leave
Players.PlayerAdded:Connect(refreshList)
Players.PlayerRemoving:Connect(refreshList)

-- Initial population
refreshList()
